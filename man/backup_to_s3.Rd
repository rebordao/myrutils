% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/backup_to_s3.R
\name{backup_to_s3}
\alias{backup_to_s3}
\title{Backups a list of folders into S3}
\usage{
backup_to_s3(bucket, root_folder, profile, dryrun = T,
  folders_file = "~/.folders_to_backup.yml",
  exclusions_file = "~/.exclusions_from_backup.yml")
}
\arguments{
\item{bucket}{Is the name of the s3 bucket where the backup is stored.}

\item{root_folder}{Is the name of the root folder where the backup
is stored. \cr If it doesn't exist, it's created automatically.}

\item{profile}{Is a profile name contained in ~/.aws/credentials.}

\item{dryrun}{When equal to T doesn't backup. Only does simulation.}

\item{folders_file}{Is the path of the file that contains the folders to backup.
By default is ~/.folders_to_backup.yml.
Example file in folder inst/config.}

\item{exclusions_file}{is the path of the file (if applicable) that
contains the folders or patterns to exclude from the backup.
By default is ~/.exclusions_from_backup.yml.
Example file in folder inst/config.}
}
\description{
This function backups a list of folders into S3.
It requires that you:
\itemize{
  \item install the AWS CLI;
  \item configure a profile in file ~/.aws/credentials;
  \item create an s3 bucket where the profile can read/write into;
  \item create a yaml file containing the list of folders for backup.
}
Optionally it's possible to define file/folder/pattern exclusions.\cr
To avoid concurrent cronjobs I implemented a PIDfile-based method
(checks if last PID is still active; if yes, do nothing; if not, execute).
}

